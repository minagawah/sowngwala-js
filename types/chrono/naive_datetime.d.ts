export type NaiveDateTime = {
    from_moment: FromMoment;
    from_ymd: FromYMD;
    from_ymd_hms: FromYMDHMS;
    from_ymd_hmsn: FromYMDHMSNano;
    from_date: FromDate;
    from_date_time: FromDateTime;
};
export const NaiveDateTime: NaiveDateTime;
export type Moment = import('moment').Moment;
export type Year = import('../types.js').Year;
export type Day = import('../types.js').Day;
export type Month = import('../types.js').Month;
export type Hour = import('../types.js').Hour;
export type Minute = import('../types.js').Minute;
export type Second = import('../types.js').Second;
export type NanoSecond = import('../types.js').NanoSecond;
export type NaiveDateContext = import('./naive_date.js').NaiveDateContext;
export type NaiveTimeContext = import('./naive_time.js').NaiveTimeContext;
export type Getter<T> = () => T;
export type NaiveDateTimeContext = {
    date: Getter<NaiveDateContext>;
    time: Getter<NaiveTimeContext>;
    year: Getter<Year>;
    month: Getter<Month>;
    day: Getter<Day>;
    hour: Getter<Hour>;
    minute: Getter<Minute>;
    second: Getter<Second>;
    nanosecond: Getter<NanoSecond>;
    to_moment: Getter<Moment>;
    print: () => void;
};
export type FromMoment = (dt: Moment) => NaiveDateTimeContext;
export type FromYMD = (year: Year, month: Month, day: Day) => NaiveDateTimeContext;
export type FromYMDHMS = (year: Year, month: Month, day: Day, hour: Hour, min: Minute, sec: Second) => NaiveDateTimeContext;
export type FromYMDHMSNano = (year: Year, month: Month, day: Day, hour: Hour, min: Minute, sec: Second, nano: NanoSecond) => NaiveDateTimeContext;
export type FromDate = (date: NaiveDateContext) => NaiveDateTimeContext;
export type FromDateTime = (date: NaiveDateContext, time: NaiveTimeContext) => NaiveDateTimeContext;
